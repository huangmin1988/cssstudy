{"新的开始":{"css":"h1{\n    color: green;\n}","html":"<h1>我的世界</h1>"},"display 之 inline-block":{"css":".wrap{\n    border:1px dotted green;\n    font-size:0;\n}\n.child{\n    width:33%;\n    height:100px;\n    border:1px solid red;\n    display:inline-block;\n}","html":"<div class=\"wrap\">\n    <div class=\"child\"></div>\n    <div class=\"child\"></div>\n    <div class=\"child\"></div> \n    <div class=\"child\"></div>\n</div>"},"多行垂直居中":{"css":"","html":""},"more column display":{"css":".three-column {\n  padding: 1em;\n  -moz-column-count: 3;\n  -moz-column-gap: 1em;\n  -webkit-column-count: 3;\n  -webkit-column-gap: 1em;\n  column-count: 4;\n  column-gap: 1em;\n  border:1px solid red;\n}","html":"<div class=\"three-column\">\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas odio, vitae scelerisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa. Fusce luctus vestibulum augue ut aliquet. Mauris ante ligula, facilisis sed ornare eu, lobortis in odio. Praesent convallis urna a lacus interdum ut hendrerit risus congue. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac. In at libero sed nunc venenatis imperdiet sed ornare turpis. Donec vitae dui eget tellus gravida venenatis. Integer fringilla congue eros non fermentum. Sed dapibus pulvinar nibh tempor porta. Cras ac leo purus. Mauris quis diam velit.\n</div>"},"display 之 flex":{"css":".box{\n  display: flex;  /* 重点 */\n  flex-direction: row; /*属性可选值的范围为row(默认)沿水平主轴由左向右排列 */\n  flex-wrap: wrap-reverse; /* 是否换行默认为不换行  */\n}\n.box div {\n    border:1px solid red;\n    width:600px;\n    height:50px;\n}","html":"<div class=\"box\">\n    <div>1</div>\n    <div>2</div>\n    <div>3</div>\n    <div>4</div>\n</div>"},"display flex - 01 主轴对齐":{"css":".box {\n  display: flex;  \n  border: 1px solid red;\n  height:200px;\n  justify-content: space-around;\n  align-items:stretch;\n  align-content:space-around;\n  flex-wrap:wrap;\n}\n.box div {\n    width:600px;\n    height:50px;\n    background-color:#ddd;\n    margin-right:10px;\n}","html":"<div class=\"box\">\n    <div class=\"item1\">1</div>\n    <div class=\"item3\">2</div>\n    <div class=\"item4\">3</div>\n    <div class=\"item5\">4</div>\n</div>"},"display flex flex-grow":{"css":" .flex-parent {\r\n     width: 1400px;\r\n     display:flex;\r\n     border:1px solid purple;\r\n}\r\n.flex-son{\r\n    height:100px;\r\n}\r\n.flex-son:nth-child(1){\r\n    flex: 3 1 200px;\r\n    background-color: green;\r\n}\r\n.flex-son:nth-child(2){\r\n    flex: 2 2 300px;\r\n    background-color: red;\r\n}\r\n.flex-son:nth-child(3){\r\n    flex: 1 3 500px;\r\n    background-color: yellow;\r\n}\r\n/*\r\n上面的例子已经说明，继续看第二个例子，同样上面的例子，我们改下父级宽度为1200px;\r\nflex-basis的总和为 1400px，小于父级宽度，将有200px的剩余宽度；\r\n既然有剩余，我们就不要加权计算，剩余的宽度将根据flex-grow，值得总和进行百分比，那么200px就会根据份数比来分配剩余的空间；\r\n\r\n剩余后宽度 w = (子元素flex-grow值 /所有子元素flex-grow的总和) * 剩余值\r\n\r\n总分数为 total = 1 + 2 + 3；\r\n\r\nson1的扩展量：(3/total) * 400，即约等于200px；\r\nson2的扩展量：(2/total) * 400，即约等于133px；\r\nson3的扩展量：(1/total) * 400，即约等于33px；\r\n\r\n最后son1、son2、son3，的实际宽度为：\r\n200 + 100 = 300px；\r\n300 + 67 = 367px；\r\n500 + 33 = 533px；\r\n*/","html":"<div class=\"flex-parent\">\r\n    <div class=\"flex-son\"></div>\r\n    <div class=\"flex-son\"></div>\r\n    <div class=\"flex-son\"></div>\r\n</div>"},"display flex - flex-shrink":{"css":" .flex-parent {\r\n     width: 800px;\r\n     display:flex;\r\n     border:1px solid purple;\r\n}\r\n.flex-son{\r\n    height:100px;\r\n}\r\n.flex-son:nth-child(1){\r\n    flex: 3 1 200px;\r\n    background-color: green;\r\n}\r\n.flex-son:nth-child(2){\r\n    flex: 2 2 300px;\r\n    background-color: red;\r\n}\r\n.flex-son:nth-child(3){\r\n    flex: 1 3 500px;\r\n    background-color: yellow;\r\n}\r\n/*\r\nflex-basis总和加起来为1000px； 那么 1000px > 800px (父级的宽度)；子元素势必要压缩；溢出了200px；\r\n\r\nson1 = (flex-shrink) * flex-basis；\r\nson2 = (flex-shrink) * flex-basis；\r\n…..\r\nsonN = (flex-shrink) * flex-basis；\r\n\r\n如果flex-basis的总和加起来大于父级宽度，子级被压缩，最后的选择是flex-shrink来进行压缩计算\r\n加权值 = son1 + son2 + …. + sonN；\r\n\r\n那么压缩后的计算公式就是\r\n\r\n压缩后宽度 w = (子元素flex-basis值 * (flex-shrink)/加权值) * 溢出值\r\n\r\n所以最后的加权值是\r\n1*200 + 2*300 + 3*500 = 2300px\r\n\r\nson1的扩展量：(200 * 1/ 2300) * 200，即约等于17px；\r\nson2的扩展量：(300 * 2/ 2300) * 200，即约等于52px；\r\nson3的扩展量：(500 * 3/ 2300) * 200，即约等于130px；\r\n\r\n最后son1、son2、son3，的实际宽度为：\r\n200 – 16  = 184px；\r\n300 – 52  = 248px；\r\n500 – 230 = 370px；\r\n*/","html":"<div class=\"flex-parent\">\r\n    <div class=\"flex-son\"></div>\r\n    <div class=\"flex-son\"></div>\r\n    <div class=\"flex-son\"></div>\r\n</div>"}}